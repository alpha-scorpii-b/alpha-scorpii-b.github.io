(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[857],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5701:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:40},s={unversionedId:"getting-started/project-structure",id:"getting-started/project-structure",isDocsHomePage:!1,title:"Project Structure",description:"The UrhoApp project is cross-platform out of the box!",source:"@site/docs/getting-started/project-structure.mdx",sourceDirName:"getting-started",slug:"/getting-started/project-structure",permalink:"/docs/getting-started/project-structure",editUrl:"https://github.com/urho3d/Urho3D/edit/master/website/docs/getting-started/project-structure.mdx",version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"docsSidebar",previous:{title:"Create New Project",permalink:"/docs/getting-started/create-urhoapp"}},p=[],c={toc:p};function u(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The UrhoApp project is cross-platform out of the box!"),(0,a.kt)("p",null,"In order to reuse the same build system for Urho3D project to successfully build your own UrhoApp project, the UrhoApp project must be structured similarly to Urho3D project. Assuming you chose to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"rake new")," to create the UrhoApp project, you will have the following project structure under a new app directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"UrhoApp\n\u251c\u2500 app\n\u2502  \u251c\u2500 build.gradle.kts\n\u2502  \u251c\u2500 CMakeLists.txt\n\u2502  \u251c\u2500 proguard-rules.pro\n\u2502  \u2514\u2500 src\n\u2502     \u251c\u2500 cpp\n\u2502     \u2502  \u251c\u2500 UrhoApp.cpp\n\u2502     \u2502  \u2514\u2500 UrhoApp.h\n\u2502     \u251c\u2500 java\n\u2502     \u2502  \u2514\u2500 io/urho3d/urhoapp\n\u2502     \u2502     \u2514\u2500 MainActivity.kt\n\u2502     \u251c\u2500 res\n\u2502     |  \u2514\u2500 (truncated)\n\u2502     \u2514\u2500 AndroidManifest.xml\n\u251c\u2500 bin\n\u2502  \u251c\u2500 CoreData\n\u2502  \u2502  \u2514\u2500 (as in Urho3D)\n\u2502  \u2514\u2500 Data\n\u2502     \u251c\u2500 Materials\n\u2502     \u2502  \u2514\u2500 Mushroom.xml\n\u2502     \u251c\u2500 Models\n\u2502     \u2502  \u2514\u2500 Mushroom.mdl\n\u2502     \u251c\u2500 Music\n\u2502     \u2502  \u2514\u2500 Ninja Gods.ogg\n\u2502     \u2514\u2500 Textures\n\u2502        \u251c\u2500 Mushroom.dds\n\u2502        \u251c\u2500 UrhoIcon.icns\n\u2502        \u2514\u2500 UrhoIcon.png\n\u251c\u2500 build.gradle.kts\n\u251c\u2500 cmake\n\u2502  \u2514\u2500 (as in Urho3D)\n\u251c\u2500 CMakeLists.txt\n\u251c\u2500 gradle/wrapper\n\u2502  \u251c\u2500 gradle-wrapper.jar\n\u2502  \u2514\u2500 gradle-wrapper.properties\n\u251c\u2500 gradle.properties\n\u251c\u2500 gradlew\n\u251c\u2500 gradlew.bat\n\u251c\u2500 rakefile\n\u251c\u2500 scripts\n\u2502  \u2514\u2500 (as in Urho3D)\n\u251c\u2500 settings.gradle.kts\n\u251c\u2500 .clang-format\n\u251c\u2500 .clang-tidy\n\u251c\u2500 .gitattributes\n\u2514\u2500 .gitignore\n")),(0,a.kt)("p",null,"At the root of the project there are a few build scripts which can be grouped as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CMake")," - consist of ",(0,a.kt)("inlineCode",{parentName:"li"},"CMakeLists.txt")," and all the CMake modules and toolchains in the ",(0,a.kt)("inlineCode",{parentName:"li"},"cmake/")," directory."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Gradle")," - consist of ",(0,a.kt)("inlineCode",{parentName:"li"},"build.gradle.kts"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"settings.gradle.kts"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"gradle.properties"),", and the Gradle wrapper scripts."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Shell")," - consist of convenience *nix bash shell script and Windows batch files in the ",(0,a.kt)("inlineCode",{parentName:"li"},"script/")," directory."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Rake")," - one ",(0,a.kt)("inlineCode",{parentName:"li"},"rakefile")," that defines all the common tasks with opinionated default options.")),(0,a.kt)("p",null,"If you are very familiar with CMake then you can directly invoke ",(0,a.kt)("inlineCode",{parentName:"p"},"cmake"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"ccmake"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"cmake-gui")," to generate a build tree for all the supported platforms, except for Android platform. For the latter case you need to use ",(0,a.kt)("inlineCode",{parentName:"p"},"gradle"),", or via its wrapper script if you don't have Gradle installed globally. For the most cases though, you will probably find it useful to use the convenience shell scripts or to use them as reference for your own convenience scripts. Finally, the ",(0,a.kt)("inlineCode",{parentName:"p"},"rake")," command can be used to execute rake tasks for building the project and more."),(0,a.kt)("p",null,"All the above are for the build system, the actual meat of the UrhoApp project are only residing in the following two directories:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"app/")," - mainly contains the C++ source code in ",(0,a.kt)("inlineCode",{parentName:"li"},"src/cpp/")," and Kotlin/Java source code in ",(0,a.kt)("inlineCode",{parentName:"li"},"src/java/"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bin/")," - contains the assets used by the Urho3D game engine, at the very least it should have ",(0,a.kt)("inlineCode",{parentName:"li"},"CoreData/")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Data/"),".")))}u.isMDXComponent=!0}}]);